name: Monitor API definition for changes

on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - saga
    paths:
      - .github/workflows/monitor-changes.yaml

env:
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  PR_TITLE: Implement Flexport API upstream changes

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - name: Keep npm cache around to speed up installs
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci --no-audit
      - name: Download API definition
        run: |
          curl -f https://api.flexport.com/docs/v2/flexport > api-docs/v2.yaml
          npx prettier --write api-docs/v2.yaml
          if git diff-index --quiet HEAD --;
          then
            echo "API definitions HAVE NOT changed.";
            echo "::set-env name=HAS_CHANGES::false";
          else;
            echo "API definitions HAVE changed.";
            echo "::set-env name=HAS_CHANGES::true";
          fi
      - name: Cancel job if no changes
        if: env.HAS_CHANGES == 'false'
        uses: andymckay/cancel-action@0.2
      - name: Compile
        run: npx tsc
      - name: Update client
        run: |
          node dist/bin/generateTypes.js
          node dist/bin/generateApiOperations.js
          npx prettier --write src/**/*.ts
          npx tsc
        continue-on-error: true
      - name: Add changes to git
        id: commit-changes
        continue-on-error: true
        run: |
          git config --global user.email "actions@example.com"
          git config --global user.name "GitHub Actions"
          git add -A
          git commit -m 'feat: update generated code

          BREAKING CHANGE: These changes have not been checked by a human.'
      - name: check if a PR is open already
        id: check-pr
        run: |
          PR_BRANCH=`gh pr list 2>&1 | grep "${{ env.PR_TITLE }}" | head -n 1 | awk '{ print $(NF) }'`
          if [ "$PR_BRANCH" = "" ]
          then
            echo "No PR exists"
            echo "::set-env name=PR::new"
          else
            echo "PR exists"
            git fetch origin ${PR_BRANCH}
            git checkout -t origin/${PR_BRANCH}
            echo "::set-env name=PR::append"
          fi
      - name: Calculate branch name from API docs checksum
        if: env.PR == 'new'
        run: |
          CHECKSUM=`sha1sum api-docs/v2.yaml | awk '{ print $1 }' | tr -d '\n'`
          echo "::set-env name=CHECKSUM::${CHECKSUM}"
          git checkout -b changes-${CHECKSUM}
      - run:
          echo "machine github.com login authtoken password ${GITHUB_TOKEN}" >
          ~/.netrc
      - name: Create PR
        if: env.PR == 'new'
        run: |
          gh pr create -B saga -b 'This PR has been automatically generated
          by pulling the latest Flexport API definition
          and re-generating the client.' -d -t "${{ env.PR_TITLE }}"
      - name: Append PR
        if: env.PR == 'append'
        run: |
          git push
